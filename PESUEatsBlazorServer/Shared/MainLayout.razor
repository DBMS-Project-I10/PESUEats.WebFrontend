@inherits LayoutComponentBase

@inject IDialogService DialogService
@inject AuthenticationStateProvider authStateProvider
@inject NavigationManager navMan


<PageTitle>Home - PESUEats</PageTitle>

<MudThemeProvider Theme="currentTheme"/>
<MudDialogProvider />
<MudSnackbarProvider />

<CascadingValue Value="UserAuthToken">
<MudLayout>
    <MudAppBar>
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <AuthorizeView>
            <Authorized>
                <MudText>PESU Eats :: Hey there@(context.User.Identity != null ? $", {context.User.Identity.Name}!": "")"!</MudText>
            </Authorized>
        </AuthorizeView>
        <MudSpacer/>
        <MudButton OnClick="@((e) => DarkMode())" style="margin-left: 1pt"
            StartIcon="@Icons.Material.Filled.LightMode" EndIcon="@Icons.Material.Filled.DarkMode"></MudButton>
        <AuthorizeView>
            <Authorized>
                <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="Signout"
                    EndIcon="@Icons.Material.Filled.Logout">Logout</MudButton>
            </Authorized>
            <NotAuthorized>
                <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="OpenSignupDialog"
                    EndIcon="@Icons.Material.Filled.Power">Sign Up</MudButton>
                <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="OpenSigninDialog"
                    EndIcon="@Icons.Material.Filled.Login">Sign In</MudButton>
            </NotAuthorized>
        </AuthorizeView>
    </MudAppBar>
    <MudDrawer @bind-Open="@_drawerOpen">
        <NavMenu/>
    </MudDrawer>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.Medium">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>
</CascadingValue>

@code {
    bool _drawerOpen = true;

    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    private string UserAuthToken { get; set; } = "";

    protected override async Task OnParametersSetAsync()
    {
        AuthenticationState authenticationState = await authenticationStateTask;
        UserAuthToken = ((Services.PESUEatsAuthStateProvider)authStateProvider).GetAuthToken(authenticationState.User);
    }

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    protected override void OnInitialized()
    {
        currentTheme = darkTheme;
    }

    private void OpenSigninDialog()
    {
        navMan.NavigateTo("/signin");
    }

    private void OpenSignupDialog()
    {
        navMan.NavigateTo("/signup");
    }

    private void Signout()
    {
        ((Services.PESUEatsAuthStateProvider)authStateProvider).SignoutUser();
        navMan.NavigateTo("/", true);
    }

    void DarkMode()
    {
        if (currentTheme == defaultTheme)
        {
            currentTheme = darkTheme;
        }
        else
        {
            currentTheme = defaultTheme;
        }
    }

    MudTheme currentTheme = new MudTheme();

    MudTheme defaultTheme = new MudTheme()
    {
        Palette = new Palette()
        {
            Black = "#272c34"
        }
    };

    MudTheme darkTheme = new MudTheme()
    {
        Palette = new Palette()
        {
            Black = "#00101d",
            Background = "#051e38",
            BackgroundGrey = "#00101d",
            Surface = "#373740",
            DrawerBackground = "#00101d",
            DrawerText = "rgba(255,255,255, 0.80)",
            DrawerIcon = "rgba(255,255,255, 0.70)",
            AppbarBackground = "#00101d",
            AppbarText = "rgba(255,255,255, 0.80)",
            TextPrimary = "rgba(255,255,255, 0.90)",
            TextSecondary = "rgba(255,255,255, 0.70)",
            ActionDefault = "#adadb1",
            ActionDisabled = "rgba(255,255,255, 0.26)",
            ActionDisabledBackground = "rgba(255,255,255, 0.12)",
            Divider = "rgba(255,255,255, 0.12)",
            DividerLight = "rgba(255,255,255, 0.06)",
            TableLines = "rgba(255,255,255, 0.12)",
            LinesDefault = "rgba(255,255,255, 0.12)",
            LinesInputs = "rgba(255,255,255, 0.3)",
            TextDisabled = "rgba(255,255,255, 0.2)",
        }
    };
}
